{"ast":null,"code":"var _jsxFileName = \"/Users/megataichi/React/react-practice/moz-todo-react/src/components/Todo.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nuseEffect(() => {\n  if (!wasEditing && isEditing) {\n    editFieldRef.current.focus();\n  }\n\n  if (wasEditing && !isEditing) {\n    editButtonRef.current.focus();\n  }\n}, [wasEditing, isEditing]);\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst wasEditing = usePrevious(isEditing);\nexport default function Todo(props) {\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const [newName, setNewName] = useState('');\n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  console.log(\"main render\");\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"New name for \", props.name), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newName,\n    onChange: handleChange,\n    ref: editFieldRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    onClick: () => setEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"renaming \", props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"new name for \", props.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"checkbox\",\n    defaultChecked: props.completed,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    ref: editButtonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn__danger\",\n    onClick: () => props.deleteTask(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 18\n    }\n  }, props.name))));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }, isEditing ? editingTemplate : viewTemplate);\n}","map":{"version":3,"sources":["/Users/megataichi/React/react-practice/moz-todo-react/src/components/Todo.js"],"names":["React","useEffect","useRef","useState","wasEditing","isEditing","editFieldRef","current","focus","editButtonRef","usePrevious","value","ref","Todo","props","newName","setNewName","setEditing","handleChange","e","target","console","log","editingTemplate","id","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nuseEffect(() => {\n  if (!wasEditing && isEditing) {\n    editFieldRef.current.focus();\n  }\n  if (wasEditing && !isEditing) {\n    editButtonRef.current.focus();\n  }\n}, [wasEditing, isEditing]);\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst wasEditing = usePrevious(isEditing);\n\nexport default function Todo(props) {\n  \n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const [newName, setNewName] = useState('');\n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  \n  \n\n  console.log(\"main render\");\n\n  const editingTemplate = (\n    <form className=\"stack-small\">\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n        <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n\n        <button \n        　type=\"submit\" \n        　className=\"btn btn__primary todo-edit\"\n        >\n          Save\n        <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n\n        <button \n         type=\"button\" \n         className=\"btn\" \n         onClick={() => setEditing(true)}\n         ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n"]},"metadata":{},"sourceType":"module"}