{"ast":null,"code":"var _jsxFileName = \"/Users/megataichi/React/react-practice/moz-todo-react/src/components/Todo.js\";\nimport React, { useState } from \"react\";\nexport default function Todo(props) {\n  const [newName, setNewName] = useState('');\n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }\n  }, \"New name for \", props.name), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"renaming \", props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"new name for \", props.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"checkbox\",\n    defaultChecked: props.completed,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    onClick: () => setEditing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"renaming \", props.name, \" \"))));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }, isEditing ? editingTemplate : viewTemplate); //   (\n  //     <li className=\"todo stack-small\">\n  //       <div className=\"c-cb\">\n  //         <input id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} />\n  //         <label className=\"todo-label\" htmlFor=\"{props.id}\">\n  //           {props.name}\n  //         </label>\n  //       </div>\n  //       <input \n  // 　　　　　　id={props.id}\n  // 　　　　　　type=\"checkbox\"\n  // 　　　　　　defaultChecked={props.completed}\n  // 　　　　　　onChange={() => props.toggleTaskCompleted(props.id)}\n  // 　　　　　/>\n  //       <div className=\"btn-group\">\n  //         <button type=\"button\" className=\"btn\">\n  //           Edit <span className=\"visually-hidden\">{props.name}</span>\n  //         </button>\n  //         <button \n  //           type=\"button\" \n  //           className=\"btn btn__danger\"\n  //           onClick={() => props.deleteTask(props.id)}\n  //         >\n  //           Delete <span className=\"visually-hidden\">{props.name}</span>\n  //         </button>\n  //       </div>\n  //     </li>\n  //   );\n}","map":{"version":3,"sources":["/Users/megataichi/React/react-practice/moz-todo-react/src/components/Todo.js"],"names":["React","useState","Todo","props","newName","setNewName","isEditing","setEditing","handleChange","e","target","value","editingTemplate","handleSubmit","id","name","viewTemplate","completed","toggleTaskCompleted"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\n\n\n\nexport default function Todo(props) {\n  const [newName, setNewName] = useState('');\n  \n  const [isEditing, setEditing] = useState(false);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  \n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n       <label className=\"todo-label\" htmlFor={props.id}>\n         New name for {props.name}\n       </label>\n       <input id={props.id} \n       className=\"todo-text\" \n       type=\"text\" \n       value={newName}\n       onChange={handleChange}\n       />\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\">\n          Cancel\n        <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n       <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n        Save\n        <span className=\"visually-hidden\">new name for {props.name}</span>\n      </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name} </span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n\n  \n\n//   (\n//     <li className=\"todo stack-small\">\n//       <div className=\"c-cb\">\n//         <input id=\"todo-0\" type=\"checkbox\" defaultChecked={props.completed} />\n//         <label className=\"todo-label\" htmlFor=\"{props.id}\">\n//           {props.name}\n//         </label>\n//       </div>\n//       <input \n// 　　　　　　id={props.id}\n// 　　　　　　type=\"checkbox\"\n// 　　　　　　defaultChecked={props.completed}\n// 　　　　　　onChange={() => props.toggleTaskCompleted(props.id)}\n// 　　　　　/>\n//       <div className=\"btn-group\">\n//         <button type=\"button\" className=\"btn\">\n//           Edit <span className=\"visually-hidden\">{props.name}</span>\n//         </button>\n//         <button \n//           type=\"button\" \n//           className=\"btn btn__danger\"\n//           onClick={() => props.deleteTask(props.id)}\n//         >\n//           Delete <span className=\"visually-hidden\">{props.name}</span>\n//         </button>\n//       </div>\n//     </li>\n//   );\n}\n"]},"metadata":{},"sourceType":"module"}