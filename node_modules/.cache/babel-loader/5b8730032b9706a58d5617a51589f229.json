{"ast":null,"code":"var _jsxFileName = \"/Users/megataichi/React/react-practice/moz-todo-react/src/components/Form.js\";\nimport React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [newName, setNewName] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"label-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new-todo-input\",\n    className: \"label__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"What needs to be done?\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"new-todo-input\",\n    className: \"input input__lg\",\n    name: \"text\",\n    autoComplete: \"off\",\n    value: name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary btn__lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/megataichi/React/react-practice/moz-todo-react/src/components/Form.js"],"names":["React","useState","Form","props","newName","setNewName","handleSubmit","e","preventDefault","editTask","id","setEditing","handleChange","target","value","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAeN,KAAK,CAACO,EAArB,EAAyBN,OAAzB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,WAASC,YAAT,CAAsBL,CAAtB,EAAyB;AACvBF,IAAAA,UAAU,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACD;;AAGD,sBACE;AAAM,IAAA,QAAQ,EAAC,aAAf;AAA6B,IAAA,QAAQ,EAAER,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAgC,IAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,eAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,KAAK,EAAES,IANT;AAOE,IAAA,QAAQ,EAAEH,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAhBF,CADF;AAsBD;;AAED,eAAeV,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction Form(props) {\n  const [newName, setNewName] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n\n  return (\n    <form onSubmit=\"stack-small\"ã€€onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}